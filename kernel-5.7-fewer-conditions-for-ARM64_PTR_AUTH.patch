This is wrong and should never go upstream.

It is needed nevertheless: Without this patch, the config builder doesn't emit
any value for ARM64_PTR_AUTH because the preconditions aren't met.
Then on "real" make, it knows more about the toolchain, sees it can be
enabled, and "make syncconfig" hangs prompting for the value.

Given our toolchain is known good (we'll always have binutils >= 2.33.1 and
current versions of gcc and clang), inside our package disabling those
preconditions doesn't do any harm.

diff -up linux-5.7/arch/arm64/Kconfig.omv~ linux-5.7/arch/arm64/Kconfig
--- linux-5.7/arch/arm64/Kconfig.omv~	2020-07-25 23:31:02.229462957 +0000
+++ linux-5.7/arch/arm64/Kconfig	2020-07-25 23:31:12.161907200 +0000
@@ -1502,12 +1502,6 @@ config ARM64_PTR_AUTH
 	bool "Enable support for pointer authentication"
 	default y
 	depends on !KVM || ARM64_VHE
-	depends on (CC_HAS_SIGN_RETURN_ADDRESS || CC_HAS_BRANCH_PROT_PAC_RET) && AS_HAS_PAC
-	# GCC 9.1 and later inserts a .note.gnu.property section note for PAC
-	# which is only understood by binutils starting with version 2.33.1.
-	depends on !CC_IS_GCC || GCC_VERSION < 90100 || LD_VERSION >= 233010000
-	depends on !CC_IS_CLANG || AS_HAS_CFI_NEGATE_RA_STATE
-	depends on (!FUNCTION_GRAPH_TRACER || DYNAMIC_FTRACE_WITH_REGS)
 	help
 	  Pointer authentication (part of the ARMv8.3 Extensions) provides
 	  instructions for signing and authenticating pointers against secret
