diff -up linux-5.3/drivers/net/vboxnetflt/linux/VBoxNetFlt-linux.c.omv~ linux-5.3/drivers/net/vboxnetflt/linux/VBoxNetFlt-linux.c
--- linux-5.3/drivers/net/vboxnetflt/linux/VBoxNetFlt-linux.c.omv~	2019-09-16 21:17:58.193558616 +0200
+++ linux-5.3/drivers/net/vboxnetflt/linux/VBoxNetFlt-linux.c	2019-09-16 21:46:25.574504611 +0200
@@ -2106,6 +2106,7 @@ static int vboxNetFltLinuxEnumeratorCall
     struct net_device *dev  = VBOX_NETDEV_NOTIFIER_INFO_TO_DEV(ptr);
     struct in_device *in_dev;
     struct inet6_dev *in6_dev;
+    const struct in_ifaddr *ifa;
 
     if (ulEventType != NETDEV_REGISTER)
         return NOTIFY_OK;
@@ -2123,7 +2124,7 @@ static int vboxNetFltLinuxEnumeratorCall
 #endif
     if (in_dev != NULL)
     {
-        for_ifa(in_dev) {
+        in_dev_for_each_ifa_rcu(ifa, in_dev) {
             if (VBOX_IPV4_IS_LOOPBACK(ifa->ifa_address))
                 return NOTIFY_OK;
 
@@ -2137,7 +2138,7 @@ static int vboxNetFltLinuxEnumeratorCall
 
             pThis->pSwitchPort->pfnNotifyHostAddress(pThis->pSwitchPort,
                 /* :fAdded */ true, kIntNetAddrType_IPv4, &ifa->ifa_address);
-        } endfor_ifa(in_dev);
+        }
     }
 
     /*
diff -up linux-5.3/drivers/virt/vboxdrv/r0drv/linux/mp-r0drv-linux.c.omv~ linux-5.3/drivers/virt/vboxdrv/r0drv/linux/mp-r0drv-linux.c
--- linux-5.3/drivers/virt/vboxdrv/r0drv/linux/mp-r0drv-linux.c.omv~	2019-09-16 21:44:46.283687150 +0200
+++ linux-5.3/drivers/virt/vboxdrv/r0drv/linux/mp-r0drv-linux.c	2019-09-16 21:45:20.384699043 +0200
@@ -284,11 +284,10 @@ RTDECL(int) RTMpOnAll(PFNRTMPWORKER pfnW
     {
         /* Fire the function on all other CPUs without waiting for completion. */
 # if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 27)
-        int rc = smp_call_function(rtmpLinuxAllWrapper, &Args, 0 /* wait */);
+        smp_call_function(rtmpLinuxAllWrapper, &Args, 0 /* wait */);
 # else
         int rc = smp_call_function(rtmpLinuxAllWrapper, &Args, 0 /* retry */, 0 /* wait */);
 # endif
-        Assert(!rc); NOREF(rc);
     }
 #endif
 
@@ -338,13 +337,12 @@ RTDECL(int) RTMpOnOthers(PFNRTMPWORKER p
 
     RTThreadPreemptDisable(&PreemptState);
 # if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 27)
-    rc = smp_call_function(rtmpLinuxWrapper, &Args, 1 /* wait */);
+    smp_call_function(rtmpLinuxWrapper, &Args, 1 /* wait */);
 # else /* older kernels */
-    rc = smp_call_function(rtmpLinuxWrapper, &Args, 0 /* retry */, 1 /* wait */);
+    smp_call_function(rtmpLinuxWrapper, &Args, 0 /* retry */, 1 /* wait */);
 # endif /* older kernels */
     RTThreadPreemptRestore(&PreemptState);
 
-    Assert(rc == 0); NOREF(rc);
     IPRT_LINUX_RESTORE_EFL_AC();
 #else
     RT_NOREF(pfnWorker, pvUser1, pvUser2);
