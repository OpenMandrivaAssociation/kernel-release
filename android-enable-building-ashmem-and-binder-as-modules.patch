diff -up linux-5.2-rc1/drivers/android/binder_alloc.c.34~ linux-5.2-rc1/drivers/android/binder_alloc.c
--- linux-5.2-rc1/drivers/android/binder_alloc.c.34~	2019-05-20 00:47:09.000000000 +0200
+++ linux-5.2-rc1/drivers/android/binder_alloc.c	2019-05-21 03:01:30.076366024 +0200
@@ -46,7 +46,7 @@ enum {
 };
 static uint32_t binder_alloc_debug_mask = BINDER_DEBUG_USER_ERROR;
 
-module_param_named(debug_mask, binder_alloc_debug_mask,
+module_param_named(alloc_debug_mask, binder_alloc_debug_mask,
 		   uint, 0644);
 
 #define binder_alloc_debug(mask, x...) \
diff -up linux-5.2-rc1/drivers/android/Kconfig.34~ linux-5.2-rc1/drivers/android/Kconfig
--- linux-5.2-rc1/drivers/android/Kconfig.34~	2019-05-20 00:47:09.000000000 +0200
+++ linux-5.2-rc1/drivers/android/Kconfig	2019-05-21 03:01:30.076366024 +0200
@@ -9,7 +9,7 @@ config ANDROID
 if ANDROID
 
 config ANDROID_BINDER_IPC
-	bool "Android Binder IPC Driver"
+	tristate "Android Binder IPC Driver"
 	depends on MMU
 	default n
 	---help---
diff -up linux-5.2-rc1/drivers/android/Makefile.34~ linux-5.2-rc1/drivers/android/Makefile
--- linux-5.2-rc1/drivers/android/Makefile.34~	2019-05-20 00:47:09.000000000 +0200
+++ linux-5.2-rc1/drivers/android/Makefile	2019-05-21 03:01:30.076366024 +0200
@@ -1,5 +1,6 @@
 ccflags-y += -I$(src)			# needed for trace events
 
 obj-$(CONFIG_ANDROID_BINDERFS)		+= binderfs.o
-obj-$(CONFIG_ANDROID_BINDER_IPC)	+= binder.o binder_alloc.o
-obj-$(CONFIG_ANDROID_BINDER_IPC_SELFTEST) += binder_alloc_selftest.o
+obj-$(CONFIG_ANDROID_BINDER_IPC)	+= binder_linux.o
+binder_linux-y := binder.o binder_alloc.o
+binder_linux-$(CONFIG_ANDROID_BINDER_IPC_SELFTEST) += binder_alloc_selftest.o
diff -up linux-5.2-rc1/drivers/staging/android/ashmem.c.34~ linux-5.2-rc1/drivers/staging/android/ashmem.c
--- linux-5.2-rc1/drivers/staging/android/ashmem.c.34~	2019-05-20 00:47:09.000000000 +0200
+++ linux-5.2-rc1/drivers/staging/android/ashmem.c	2019-05-21 03:01:30.077366015 +0200
@@ -24,6 +24,7 @@
 #include <linux/bitops.h>
 #include <linux/mutex.h>
 #include <linux/shmem_fs.h>
+#include <linux/module.h>
 #include "ashmem.h"
 
 #define ASHMEM_NAME_PREFIX "dev/ashmem/"
@@ -925,3 +926,5 @@ out:
 	return ret;
 }
 device_initcall(ashmem_init);
+
+MODULE_LICENSE("GPL v2");
diff -up linux-5.2-rc1/drivers/staging/android/Kconfig.34~ linux-5.2-rc1/drivers/staging/android/Kconfig
--- linux-5.2-rc1/drivers/staging/android/Kconfig.34~	2019-05-21 03:01:30.077366015 +0200
+++ linux-5.2-rc1/drivers/staging/android/Kconfig	2019-05-21 03:01:52.295165688 +0200
@@ -4,7 +4,7 @@ menu "Android"
 if ANDROID
 
 config ASHMEM
-	bool "Enable the Anonymous Shared Memory Subsystem"
+	tristate "Enable the Anonymous Shared Memory Subsystem"
 	depends on SHMEM
 	help
 	  The ashmem subsystem is a new shared memory allocator, similar to
diff -up linux-5.2-rc1/drivers/staging/android/Makefile.34~ linux-5.2-rc1/drivers/staging/android/Makefile
--- linux-5.2-rc1/drivers/staging/android/Makefile.34~	2019-05-20 00:47:09.000000000 +0200
+++ linux-5.2-rc1/drivers/staging/android/Makefile	2019-05-21 03:01:30.077366015 +0200
@@ -3,5 +3,6 @@ ccflags-y += -I$(src)			# needed for tra
 
 obj-y					+= ion/
 
-obj-$(CONFIG_ASHMEM)			+= ashmem.o
+obj-$(CONFIG_ASHMEM)			+= ashmem_linux.o
+ashmem_linux-y += ashmem.o
 obj-$(CONFIG_ANDROID_VSOC)		+= vsoc.o
