From 61e4d47a66ba32eed9e83257f36e82d795bf4c9e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bernhard=20Rosenkr=C3=A4nzer?= <bero@linaro.org>
Date: Thu, 23 Feb 2017 00:41:15 +0100
Subject: [PATCH 22/30] Fix undefined references to acpi_idle_driver on aarch64
 with clang
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

gcc removes the reference to acpi_idle_driver in processor_driver.c when
building without CONFIG_ACPI_PROCESSOR_IDLE - it thinks the code is
unreachable. clang doesn't, creating an undefined reference.

Signed-off-by: Bernhard Rosenkr√§nzer <bero@linaro.org>
---
 drivers/acpi/processor_driver.c | 2 ++
 include/acpi/processor.h        | 2 +-
 2 files changed, 3 insertions(+), 1 deletion(-)

diff --git a/drivers/acpi/processor_driver.c b/drivers/acpi/processor_driver.c
index 9d5f0c7ed3f7..aafe719e6bb8 100644
--- a/drivers/acpi/processor_driver.c
+++ b/drivers/acpi/processor_driver.c
@@ -239,8 +239,10 @@ static int __acpi_processor_start(struct acpi_device *device)
 	if (result && !IS_ENABLED(CONFIG_ACPI_CPU_FREQ_PSS))
 		dev_warn(&device->dev, "CPPC data invalid or not present\n");
 
+#ifdef CONFIG_ACPI_PROCESSOR_IDLE
 	if (!cpuidle_get_driver() || cpuidle_get_driver() == &acpi_idle_driver)
 		acpi_processor_power_init(pr);
+#endif
 
 	result = acpi_pss_perf_init(pr, device);
 	if (result)
diff --git a/include/acpi/processor.h b/include/acpi/processor.h
index c1ba00fc4888..06848b600926 100644
--- a/include/acpi/processor.h
+++ b/include/acpi/processor.h
@@ -387,8 +387,8 @@ static inline void acpi_processor_throttling_init(void) {}
 #endif	/* CONFIG_ACPI_CPU_FREQ_PSS */
 
 /* in processor_idle.c */
-extern struct cpuidle_driver acpi_idle_driver;
 #ifdef CONFIG_ACPI_PROCESSOR_IDLE
+extern struct cpuidle_driver acpi_idle_driver;
 int acpi_processor_power_init(struct acpi_processor *pr);
 int acpi_processor_power_exit(struct acpi_processor *pr);
 int acpi_processor_power_state_has_changed(struct acpi_processor *pr);
-- 
2.11.0

