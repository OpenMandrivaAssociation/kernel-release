diff -up linux-4.17/arch/x86/kvm/x86.c.0420~ linux-4.17/arch/x86/kvm/x86.c
--- linux-4.17/arch/x86/kvm/x86.c.0420~	2018-06-03 23:15:21.000000000 +0200
+++ linux-4.17/arch/x86/kvm/x86.c	2018-06-05 21:31:38.460601779 +0200
@@ -45,6 +45,7 @@
 #include <linux/user-return-notifier.h>
 #include <linux/srcu.h>
 #include <linux/slab.h>
+#include <linux/mm.h>
 #include <linux/perf_event.h>
 #include <linux/uaccess.h>
 #include <linux/hash.h>
@@ -6660,6 +6661,19 @@ static void kvm_pv_kick_cpu_op(struct kv
 	kvm_irq_delivery_to_apic(kvm, NULL, &lapic_irq, NULL);
 }
 
+static int kvm_pv_return_mem_op(struct kvm *kvm, gpa_t gpa, size_t len)
+{
+	unsigned long start = gfn_to_hva(kvm, gpa_to_gfn(gpa));
+
+	if (len > KVM_MAX_RET_MEM_SIZE)
+		return KVM_EPERM;
+
+	if (kvm_is_error_hva(start + len))
+		return KVM_EFAULT;
+
+	return do_madvise(start, len, kvm_ret_mem_advice);
+}
+
 void kvm_vcpu_deactivate_apicv(struct kvm_vcpu *vcpu)
 {
 	vcpu->arch.apicv_active = false;
@@ -6709,6 +6723,9 @@ int kvm_emulate_hypercall(struct kvm_vcp
 		ret = kvm_pv_clock_pairing(vcpu, a0, a1);
 		break;
 #endif
+	case KVM_HC_RETURN_MEM:
+		ret = kvm_pv_return_mem_op(vcpu->kvm, a0, a1);
+		break;
 	default:
 		ret = -KVM_ENOSYS;
 		break;
diff -up linux-4.17/include/linux/mm.h.0420~ linux-4.17/include/linux/mm.h
--- linux-4.17/include/linux/mm.h.0420~	2018-06-05 21:31:38.458601779 +0200
+++ linux-4.17/include/linux/mm.h	2018-06-05 21:31:38.460601779 +0200
@@ -2583,6 +2583,11 @@ extern bool process_shares_mm(struct tas
 extern int sysctl_drop_caches;
 int drop_caches_sysctl_handler(struct ctl_table *, int,
 					void __user *, size_t *, loff_t *);
+extern int sysctl_kvm_madv_instant_free;
+extern int kvm_ret_mem_advice;
+int kvm_madv_instant_free_sysctl_handler(struct ctl_table *table, int write,
+					 void __user *buffer, size_t *length,
+					 loff_t *ppos);
 #endif
 
 void drop_slab(void);
diff -up linux-4.17/include/uapi/linux/kvm_para.h.0420~ linux-4.17/include/uapi/linux/kvm_para.h
--- linux-4.17/include/uapi/linux/kvm_para.h.0420~	2018-06-03 23:15:21.000000000 +0200
+++ linux-4.17/include/uapi/linux/kvm_para.h	2018-06-05 21:31:38.460601779 +0200
@@ -26,6 +26,9 @@
 #define KVM_HC_MIPS_EXIT_VM		7
 #define KVM_HC_MIPS_CONSOLE_OUTPUT	8
 #define KVM_HC_CLOCK_PAIRING		9
+#define KVM_HC_RETURN_MEM		10
+
+#define KVM_MAX_RET_MEM_SIZE		(1 << 22) // 4MiB
 
 /*
  * hypercalls use architecture specific
diff -up linux-4.17/kernel/sysctl.c.0420~ linux-4.17/kernel/sysctl.c
--- linux-4.17/kernel/sysctl.c.0420~	2018-06-03 23:15:21.000000000 +0200
+++ linux-4.17/kernel/sysctl.c	2018-06-05 21:31:38.460601779 +0200
@@ -1411,6 +1411,13 @@ static struct ctl_table vm_table[] = {
 		.extra1		= &one,
 		.extra2		= &four,
 	},
+	{
+		.procname	= "kvm_madv_instant_free",
+		.data		= &sysctl_kvm_madv_instant_free,
+		.maxlen		= sizeof(int),
+		.mode		= 0644,
+		.proc_handler	= kvm_madv_instant_free_sysctl_handler,
+	},
 #ifdef CONFIG_COMPACTION
 	{
 		.procname	= "compact_memory",
diff -up linux-4.17/mm/kvm.c.0420~ linux-4.17/mm/kvm.c
--- linux-4.17/mm/kvm.c.0420~	2018-06-05 21:31:38.461601779 +0200
+++ linux-4.17/mm/kvm.c	2018-06-05 21:31:38.461601779 +0200
@@ -0,0 +1,26 @@
+#include <linux/mman.h>
+#include <linux/sysctl.h>
+
+int sysctl_kvm_madv_instant_free;
+
+int kvm_ret_mem_advice = MADV_DONTNEED;
+EXPORT_SYMBOL_GPL(kvm_ret_mem_advice);
+
+int kvm_madv_instant_free_sysctl_handler(struct ctl_table *table, int write,
+	void __user *buffer, size_t *length, loff_t *ppos)
+{
+	int ret;
+
+	ret = proc_dointvec(table, write, buffer, length, ppos);
+	if (ret)
+		return ret;
+
+#ifdef MADV_FREE
+	if (sysctl_kvm_madv_instant_free > 0)
+		kvm_ret_mem_advice = MADV_FREE;
+	else
+		kvm_ret_mem_advice = MADV_DONTNEED;
+#endif
+
+	return 0;
+}
diff -up linux-4.17/mm/Makefile.0420~ linux-4.17/mm/Makefile
--- linux-4.17/mm/Makefile.0420~	2018-06-05 21:31:38.460601779 +0200
+++ linux-4.17/mm/Makefile	2018-06-05 21:32:02.777603111 +0200
@@ -39,7 +39,7 @@ obj-y			:= filemap.o mempool.o oom_kill.
 			   mm_init.o mmu_context.o percpu.o slab_common.o \
 			   compaction.o vmacache.o \
 			   interval_tree.o list_lru.o workingset.o \
-			   debug.o $(mmu-y)
+			   debug.o kvm.o $(mmu-y)
 
 obj-y += init-mm.o
 
