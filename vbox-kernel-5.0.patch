diff -up linux-5.0-rc2/fs/vboxsf/super.c.omv~ linux-5.0-rc2/fs/vboxsf/super.c
--- linux-5.0-rc2/fs/vboxsf/super.c.omv~	2019-01-14 04:11:57.486326225 +0100
+++ linux-5.0-rc2/fs/vboxsf/super.c	2019-01-14 04:12:26.646828086 +0100
@@ -12,6 +12,7 @@
 
 #include <linux/magic.h>
 #include <linux/module.h>
+#include <uapi/linux/mount.h>
 #include <linux/nls.h>
 #include <linux/parser.h>
 #include <linux/statfs.h>
diff -up linux-5.0/drivers/staging/vboxvideo/vbox_drv.h.omv~ linux-5.0/drivers/staging/vboxvideo/vbox_drv.h
--- linux-5.0/drivers/staging/vboxvideo/vbox_drv.h.omv~	2019-03-04 18:57:44.537075766 +0100
+++ linux-5.0/drivers/staging/vboxvideo/vbox_drv.h	2019-03-04 18:59:08.570335225 +0100
@@ -169,8 +169,6 @@ struct vbox_private {
 	int fb_mtrr;
 
 	struct {
-		struct drm_global_reference mem_global_ref;
-		struct ttm_bo_global_ref bo_global_ref;
 		struct ttm_bo_device bdev;
 		bool mm_initialised;
 	} ttm;
diff -up linux-5.0/drivers/staging/vboxvideo/vbox_main.c.omv~ linux-5.0/drivers/staging/vboxvideo/vbox_main.c
--- linux-5.0/drivers/staging/vboxvideo/vbox_main.c.omv~	2019-03-04 23:41:08.865321723 +0100
+++ linux-5.0/drivers/staging/vboxvideo/vbox_main.c	2019-03-04 23:42:21.352497865 +0100
@@ -647,7 +647,7 @@ vbox_dumb_mmap_offset(struct drm_file *f
 	bo = gem_to_vbox_bo(obj);
 	*offset = vbox_bo_mmap_offset(bo);
 
-	drm_gem_object_unreference(obj);
+	drm_gem_object_put(obj);
 	ret = 0;
 
 out_unlock:
diff -up linux-5.0/drivers/staging/vboxvideo/vbox_ttm.c.omv~ linux-5.0/drivers/staging/vboxvideo/vbox_ttm.c
--- linux-5.0/drivers/staging/vboxvideo/vbox_ttm.c.omv~	2019-03-05 00:23:06.710043912 +0100
+++ linux-5.0/drivers/staging/vboxvideo/vbox_ttm.c	2019-03-05 01:20:06.840694364 +0100
@@ -41,61 +41,6 @@ static inline struct vbox_private *vbox_
 	return container_of(bd, struct vbox_private, ttm.bdev);
 }
 
-static int vbox_ttm_mem_global_init(struct drm_global_reference *ref)
-{
-	return ttm_mem_global_init(ref->object);
-}
-
-static void vbox_ttm_mem_global_release(struct drm_global_reference *ref)
-{
-	ttm_mem_global_release(ref->object);
-}
-
-/**
- * Adds the vbox memory manager object/structures to the global memory manager.
- */
-static int vbox_ttm_global_init(struct vbox_private *vbox)
-{
-	struct drm_global_reference *global_ref;
-	int ret;
-
-	global_ref = &vbox->ttm.mem_global_ref;
-	global_ref->global_type = DRM_GLOBAL_TTM_MEM;
-	global_ref->size = sizeof(struct ttm_mem_global);
-	global_ref->init = &vbox_ttm_mem_global_init;
-	global_ref->release = &vbox_ttm_mem_global_release;
-	ret = drm_global_item_ref(global_ref);
-	if (ret) {
-		DRM_ERROR("Failed setting up TTM memory subsystem.\n");
-		return ret;
-	}
-
-	vbox->ttm.bo_global_ref.mem_glob = vbox->ttm.mem_global_ref.object;
-	global_ref = &vbox->ttm.bo_global_ref.ref;
-	global_ref->global_type = DRM_GLOBAL_TTM_BO;
-	global_ref->size = sizeof(struct ttm_bo_global);
-	global_ref->init = &ttm_bo_global_init;
-	global_ref->release = &ttm_bo_global_release;
-
-	ret = drm_global_item_ref(global_ref);
-	if (ret) {
-		DRM_ERROR("Failed setting up TTM BO subsystem.\n");
-		drm_global_item_unref(&vbox->ttm.mem_global_ref);
-		return ret;
-	}
-
-	return 0;
-}
-
-/**
- * Removes the vbox memory manager object from the global memory manager.
- */
-static void vbox_ttm_global_release(struct vbox_private *vbox)
-{
-	drm_global_item_unref(&vbox->ttm.bo_global_ref.ref);
-	drm_global_item_unref(&vbox->ttm.mem_global_ref);
-}
-
 static void vbox_bo_ttm_destroy(struct ttm_buffer_object *tbo)
 {
 	struct vbox_bo *bo;
@@ -282,12 +227,7 @@ int vbox_mm_init(struct vbox_private *vb
 	struct drm_device *dev = vbox->dev;
 	struct ttm_bo_device *bdev = &vbox->ttm.bdev;
 
-	ret = vbox_ttm_global_init(vbox);
-	if (ret)
-		return ret;
-
 	ret = ttm_bo_device_init(&vbox->ttm.bdev,
-				 vbox->ttm.bo_global_ref.ref.object,
 				 &vbox_bo_driver,
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 15, 0) || defined(RHEL_71)
 				 dev->anon_inode->i_mapping,
@@ -295,7 +235,7 @@ int vbox_mm_init(struct vbox_private *vb
 				 DRM_FILE_PAGE_OFFSET, true);
 	if (ret) {
 		DRM_ERROR("Error initialising bo driver; %d\n", ret);
-		goto err_ttm_global_release;
+		return ret;
 	}
 
 	ret = ttm_bo_init_mm(bdev, TTM_PL_VRAM,
@@ -317,8 +257,6 @@ int vbox_mm_init(struct vbox_private *vb
 
 err_device_release:
 	ttm_bo_device_release(&vbox->ttm.bdev);
-err_ttm_global_release:
-	vbox_ttm_global_release(vbox);
 	return ret;
 }
 
@@ -332,7 +270,6 @@ void vbox_mm_fini(struct vbox_private *v
 	arch_phys_wc_del(vbox->fb_mtrr);
 #endif
 	ttm_bo_device_release(&vbox->ttm.bdev);
-	vbox_ttm_global_release(vbox);
 }
 
 void vbox_ttm_placement(struct vbox_bo *bo, int domain)
